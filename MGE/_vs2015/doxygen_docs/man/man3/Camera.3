.TH "Camera" 3 "Mon Jan 1 2018" "MGE" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Camera
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <Camera\&.hpp>\fP
.PP
Inherits \fBGameObject\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBCamera\fP (std::string pName='camera', glm::vec3 pPosition=glm::vec3(0\&.0f, 3\&.0f, 5\&.0f), glm::mat4 pProjectionMatrix=glm::perspective(glm::radians(60\&.0f), 4\&.0f/3\&.0f, 0\&.1f, 1000\&.0f))"
.br
.ti -1c
.RI "virtual \fB~Camera\fP ()"
.br
.ti -1c
.RI "glm::mat4 & \fBgetProjection\fP ()"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
\fBCamera\fP is just a \fBGameObject\fP with an additional projection matrix\&. The camera's own transform is used to generate a world-to-view matrix by taking the inverse of the camera transform\&. The camera's perspective matrix is used in the MVP matrix creation\&. 
.PP
Definition at line 12 of file Camera\&.hpp\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "Camera::Camera (std::string pName = \fC'camera'\fP, glm::vec3 pPosition = \fCglm::vec3( 0\&.0f, 3\&.0f, 5\&.0f )\fP, glm::mat4 pProjectionMatrix = \fCglm::perspective (glm::radians(60\&.0f), 4\&.0f/3\&.0f, 0\&.1f, 1000\&.0f  )\fP)"

.PP
Definition at line 4 of file Camera\&.cpp\&.
.SS "Camera::~Camera ()\fC [virtual]\fP"

.PP
Definition at line 9 of file Camera\&.cpp\&.
.SH "Member Function Documentation"
.PP 
.SS "glm::mat4 & Camera::getProjection ()"

.PP
Definition at line 14 of file Camera\&.cpp\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for MGE from the source code\&.
