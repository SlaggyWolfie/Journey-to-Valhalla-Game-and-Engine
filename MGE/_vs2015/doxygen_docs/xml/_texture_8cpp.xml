<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="_texture_8cpp" kind="file" language="C++">
    <compoundname>Texture.cpp</compoundname>
    <includes local="no">iostream</includes>
    <includes local="no">string</includes>
    <includes local="no">SFML/Graphics.hpp</includes>
    <includes refid="_texture_8hpp" local="yes">mge/core/Texture.hpp</includes>
    <incdepgraph>
      <node id="289">
        <label>SFML/Graphics.hpp</label>
      </node>
      <node id="288">
        <label>string</label>
      </node>
      <node id="286">
        <label>F:/Uni/2.2/3D Rendering/mge_v18_student_version(3)/mge_v18_student_version/src/mge/core/Texture.cpp</label>
        <link refid="_texture_8cpp"/>
        <childnode refid="287" relation="include">
        </childnode>
        <childnode refid="288" relation="include">
        </childnode>
        <childnode refid="289" relation="include">
        </childnode>
        <childnode refid="290" relation="include">
        </childnode>
      </node>
      <node id="292">
        <label>GL/glew.h</label>
      </node>
      <node id="291">
        <label>map</label>
      </node>
      <node id="290">
        <label>mge/core/Texture.hpp</label>
        <link refid="_texture_8hpp"/>
        <childnode refid="291" relation="include">
        </childnode>
        <childnode refid="288" relation="include">
        </childnode>
        <childnode refid="292" relation="include">
        </childnode>
      </node>
      <node id="287">
        <label>iostream</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;SFML/Graphics.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_texture_8hpp" kindref="compound">mge/core/Texture.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7" refid="class_texture_1a6c275e3f186675ff6ed73ccf970e552f" refkind="member"><highlight class="normal"><ref refid="class_texture_1a6c275e3f186675ff6ed73ccf970e552f" kindref="member">Texture::Texture</ref>():<sp/>_id()<sp/>{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/>glGenTextures<sp/>(1,<sp/>&amp;<ref refid="class_texture_1af6563b9b08f4bf2749639eb4434c9c35" kindref="member">_id</ref>);</highlight></codeline>
<codeline lineno="9"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11" refid="class_texture_1a09c4bcb7462f64c1d20fa69dba3cee8a" refkind="member"><highlight class="normal"><ref refid="class_texture_1a09c4bcb7462f64c1d20fa69dba3cee8a" kindref="member">Texture::~Texture</ref>()</highlight></codeline>
<codeline lineno="12"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>glDeleteTextures(1,<sp/>&amp;<ref refid="class_texture_1af6563b9b08f4bf2749639eb4434c9c35" kindref="member">_id</ref>);</highlight></codeline>
<codeline lineno="14"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="class_texture_1ae5e31b308a56a6829b8f75b79bf1d359" refkind="member"><highlight class="normal">GLuint<sp/><ref refid="class_texture_1ae5e31b308a56a6829b8f75b79bf1d359" kindref="member">Texture::getId</ref>()<sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_texture_1af6563b9b08f4bf2749639eb4434c9c35" kindref="member">_id</ref>;</highlight></codeline>
<codeline lineno="18"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>importer<sp/>for<sp/>textures</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="class_texture_1a38fbcc58ce545aed8321d5a7a9dae103" refkind="member"><highlight class="normal"><ref refid="class_texture" kindref="compound">Texture</ref>*<sp/><ref refid="class_texture_1a38fbcc58ce545aed8321d5a7a9dae103" kindref="member">Texture::load</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>pFilename)</highlight></codeline>
<codeline lineno="22"><highlight class="normal">{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>load<sp/>from<sp/>file<sp/>and<sp/>store<sp/>in<sp/>cache</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>sf::Image<sp/>image;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(image.loadFromFile(pFilename))<sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//normal<sp/>image<sp/>0,0<sp/>is<sp/>top<sp/>left,<sp/>but<sp/>opengl<sp/>considers<sp/>0,0<sp/>to<sp/>be<sp/>bottom<sp/>left,<sp/>so<sp/>we<sp/>flip<sp/>the<sp/>image<sp/>internally</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>image.flipVertically();</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//create<sp/>a<sp/>wrapper<sp/>for<sp/>the<sp/>id<sp/>(texture<sp/>is<sp/>nothing<sp/>more<sp/>than<sp/>that)<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//load<sp/>corresponding<sp/>data<sp/>into<sp/>opengl<sp/>using<sp/>this<sp/>id</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_texture" kindref="compound">Texture</ref><sp/>*<sp/>texture<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_texture_1a6c275e3f186675ff6ed73ccf970e552f" kindref="member">Texture</ref>();</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glBindTexture<sp/>(GL_TEXTURE_2D,<sp/>texture-&gt;<ref refid="class_texture_1ae5e31b308a56a6829b8f75b79bf1d359" kindref="member">getId</ref>());</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glTexImage2D<sp/>(GL_TEXTURE_2D,<sp/>0,<sp/>GL_RGBA,<sp/>image.getSize().x,<sp/>image.getSize().y,<sp/>0,<sp/>GL_RGBA,<sp/>GL_UNSIGNED_BYTE,<sp/>image.getPixelsPtr());</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glTexParameteri<sp/>(GL_TEXTURE_2D,<sp/>GL_TEXTURE_MIN_FILTER,<sp/>GL_LINEAR);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glTexParameteri<sp/>(GL_TEXTURE_2D,<sp/>GL_TEXTURE_MAG_FILTER,<sp/>GL_LINEAR);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glBindTexture(GL_TEXTURE_2D,<sp/>0);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>texture;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal">}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="F:/Uni/2.2/3D Rendering/mge_v18_student_version(3)/mge_v18_student_version/src/mge/core/Texture.cpp"/>
  </compounddef>
</doxygen>
