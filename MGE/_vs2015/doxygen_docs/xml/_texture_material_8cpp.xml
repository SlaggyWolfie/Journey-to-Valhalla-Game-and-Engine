<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="_texture_material_8cpp" kind="file" language="C++">
    <compoundname>TextureMaterial.cpp</compoundname>
    <includes refid="glm_8hpp" local="yes">glm.hpp</includes>
    <includes refid="_texture_material_8hpp" local="yes">TextureMaterial.hpp</includes>
    <includes refid="_texture_8hpp" local="yes">mge/core/Texture.hpp</includes>
    <includes refid="_light_8hpp" local="yes">mge/core/Light.hpp</includes>
    <includes refid="_world_8hpp" local="yes">mge/core/World.hpp</includes>
    <includes refid="_mesh_8hpp" local="yes">mge/core/Mesh.hpp</includes>
    <includes refid="_game_object_8hpp" local="yes">mge/core/GameObject.hpp</includes>
    <includes refid="_shader_program_8hpp" local="yes">mge/core/ShaderProgram.hpp</includes>
    <includes refid="config_8hpp" local="yes">mge/config.hpp</includes>
    <incdepgraph>
      <node id="389">
        <label>iomanip</label>
      </node>
      <node id="397">
        <label>string</label>
      </node>
      <node id="394">
        <label>GL/glew.h</label>
      </node>
      <node id="396">
        <label>map</label>
      </node>
      <node id="402">
        <label>mge/core/Mesh.hpp</label>
        <link refid="_mesh_8hpp"/>
        <childnode refid="400" relation="include">
        </childnode>
        <childnode refid="394" relation="include">
        </childnode>
        <childnode refid="387" relation="include">
        </childnode>
      </node>
      <node id="386">
        <label>F:/Uni/2.2/3D Rendering/mge_v18_student_version(3)/mge_v18_student_version/src/mge/materials/TextureMaterial.cpp</label>
        <link refid="_texture_material_8cpp"/>
        <childnode refid="387" relation="include">
        </childnode>
        <childnode refid="392" relation="include">
        </childnode>
        <childnode refid="395" relation="include">
        </childnode>
        <childnode refid="398" relation="include">
        </childnode>
        <childnode refid="401" relation="include">
        </childnode>
        <childnode refid="402" relation="include">
        </childnode>
        <childnode refid="399" relation="include">
        </childnode>
        <childnode refid="403" relation="include">
        </childnode>
        <childnode refid="404" relation="include">
        </childnode>
      </node>
      <node id="403">
        <label>mge/core/ShaderProgram.hpp</label>
        <link refid="_shader_program_8hpp"/>
        <childnode refid="394" relation="include">
        </childnode>
        <childnode refid="400" relation="include">
        </childnode>
        <childnode refid="397" relation="include">
        </childnode>
      </node>
      <node id="404">
        <label>mge/config.hpp</label>
        <link refid="config_8hpp"/>
        <childnode refid="397" relation="include">
        </childnode>
      </node>
      <node id="395">
        <label>mge/core/Texture.hpp</label>
        <link refid="_texture_8hpp"/>
        <childnode refid="396" relation="include">
        </childnode>
        <childnode refid="397" relation="include">
        </childnode>
        <childnode refid="394" relation="include">
        </childnode>
      </node>
      <node id="400">
        <label>vector</label>
      </node>
      <node id="387">
        <label>glm.hpp</label>
        <link refid="glm_8hpp"/>
        <childnode refid="388" relation="include">
        </childnode>
        <childnode refid="389" relation="include">
        </childnode>
        <childnode refid="390" relation="include">
        </childnode>
        <childnode refid="391" relation="include">
        </childnode>
      </node>
      <node id="391">
        <label>glm/ext.hpp</label>
      </node>
      <node id="399">
        <label>mge/core/GameObject.hpp</label>
        <link refid="_game_object_8hpp"/>
        <childnode refid="400" relation="include">
        </childnode>
        <childnode refid="387" relation="include">
        </childnode>
      </node>
      <node id="393">
        <label>mge/materials/AbstractMaterial.hpp</label>
        <link refid="_abstract_material_8hpp"/>
        <childnode refid="387" relation="include">
        </childnode>
      </node>
      <node id="392">
        <label>TextureMaterial.hpp</label>
        <link refid="_texture_material_8hpp"/>
        <childnode refid="393" relation="include">
        </childnode>
        <childnode refid="394" relation="include">
        </childnode>
      </node>
      <node id="388">
        <label>iostream</label>
      </node>
      <node id="398">
        <label>mge/core/Light.hpp</label>
        <link refid="_light_8hpp"/>
        <childnode refid="387" relation="include">
        </childnode>
        <childnode refid="399" relation="include">
        </childnode>
      </node>
      <node id="401">
        <label>mge/core/World.hpp</label>
        <link refid="_world_8hpp"/>
        <childnode refid="399" relation="include">
        </childnode>
      </node>
      <node id="390">
        <label>glm/glm.hpp</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="glm_8hpp" kindref="compound">glm.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_texture_material_8hpp" kindref="compound">TextureMaterial.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_texture_8hpp" kindref="compound">mge/core/Texture.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_light_8hpp" kindref="compound">mge/core/Light.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_world_8hpp" kindref="compound">mge/core/World.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_mesh_8hpp" kindref="compound">mge/core/Mesh.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_game_object_8hpp" kindref="compound">mge/core/GameObject.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_shader_program_8hpp" kindref="compound">mge/core/ShaderProgram.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="config_8hpp" kindref="compound">mge/config.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><ref refid="class_shader_program" kindref="compound">ShaderProgram</ref>*<sp/>TextureMaterial::_shader<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal">GLint<sp/>TextureMaterial::_uMVPMatrix<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="15"><highlight class="normal">GLint<sp/>TextureMaterial::_uDiffuseTexture<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal">GLint<sp/>TextureMaterial::_aVertex<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="18"><highlight class="normal">GLint<sp/>TextureMaterial::_aNormal<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="19"><highlight class="normal">GLint<sp/>TextureMaterial::_aUV<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="class_texture_material_1ae274f8e21609fe3c928aff4f8a279ff7" refkind="member"><highlight class="normal"><ref refid="class_texture_material_1ae274f8e21609fe3c928aff4f8a279ff7" kindref="member">TextureMaterial::TextureMaterial</ref>(<ref refid="class_texture" kindref="compound">Texture</ref><sp/>*<sp/>pDiffuseTexture):_diffuseTexture(pDiffuseTexture)<sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>_lazyInitializeShader();</highlight></codeline>
<codeline lineno="23"><highlight class="normal">}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="class_texture_material_1a29d88f9b89992caccfd916d41b0a4575" refkind="member"><highlight class="normal"><ref refid="class_texture_material_1a29d88f9b89992caccfd916d41b0a4575" kindref="member">TextureMaterial::~TextureMaterial</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TextureMaterial::_lazyInitializeShader()<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!_shader)<sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_shader<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_shader_program" kindref="compound">ShaderProgram</ref>();</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_shader-&gt;<ref refid="class_shader_program_1a3214d80d90063cd6eac2dc404cbb07ac" kindref="member">addShader</ref>(GL_VERTEX_SHADER,<sp/><ref refid="namespaceconfig_1aa0f87be60f0f595e4e06d070a44a2aac" kindref="member">config::MGE_SHADER_PATH</ref>+</highlight><highlight class="stringliteral">&quot;texture.vs&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_shader-&gt;<ref refid="class_shader_program_1a3214d80d90063cd6eac2dc404cbb07ac" kindref="member">addShader</ref>(GL_FRAGMENT_SHADER,<sp/><ref refid="namespaceconfig_1aa0f87be60f0f595e4e06d070a44a2aac" kindref="member">config::MGE_SHADER_PATH</ref>+</highlight><highlight class="stringliteral">&quot;texture.fs&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_shader-&gt;<ref refid="class_shader_program_1a531579551eaa1fcbb6ad403794956a05" kindref="member">finalize</ref>();</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cache<sp/>all<sp/>the<sp/>uniform<sp/>and<sp/>attribute<sp/>indexes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_uMVPMatrix<sp/>=<sp/>_shader-&gt;<ref refid="class_shader_program_1a7a89bd3e283f884d665504335b2b6698" kindref="member">getUniformLocation</ref>(</highlight><highlight class="stringliteral">&quot;mvpMatrix&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_uDiffuseTexture<sp/>=<sp/>_shader-&gt;<ref refid="class_shader_program_1a7a89bd3e283f884d665504335b2b6698" kindref="member">getUniformLocation</ref>(</highlight><highlight class="stringliteral">&quot;diffuseTexture&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_aVertex<sp/>=<sp/>_shader-&gt;<ref refid="class_shader_program_1a212a243637024e0d69b4ce7c6ac16220" kindref="member">getAttribLocation</ref>(</highlight><highlight class="stringliteral">&quot;vertex&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_aNormal<sp/>=<sp/>_shader-&gt;<ref refid="class_shader_program_1a212a243637024e0d69b4ce7c6ac16220" kindref="member">getAttribLocation</ref>(</highlight><highlight class="stringliteral">&quot;normal&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_aUV<sp/>=<sp/><sp/><sp/><sp/><sp/>_shader-&gt;<ref refid="class_shader_program_1a212a243637024e0d69b4ce7c6ac16220" kindref="member">getAttribLocation</ref>(</highlight><highlight class="stringliteral">&quot;uv&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal">}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="class_texture_material_1a07631f39e68197508d8a7b709d694303" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_texture_material_1a07631f39e68197508d8a7b709d694303" kindref="member">TextureMaterial::setDiffuseTexture</ref><sp/>(<ref refid="class_texture" kindref="compound">Texture</ref>*<sp/>pDiffuseTexture)<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>_diffuseTexture<sp/>=<sp/>pDiffuseTexture;</highlight></codeline>
<codeline lineno="46"><highlight class="normal">}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="class_texture_material_1a44908146101c7f0c3ef49738186e6d87" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_texture_material_1a44908146101c7f0c3ef49738186e6d87" kindref="member">TextureMaterial::render</ref>(<ref refid="class_world" kindref="compound">World</ref>*<sp/>pWorld,<sp/><ref refid="class_mesh" kindref="compound">Mesh</ref>*<sp/>pMesh,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>glm::mat4&amp;<sp/>pModelMatrix,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>glm::mat4&amp;<sp/>pViewMatrix,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>glm::mat4&amp;<sp/>pProjectionMatrix)<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!_diffuseTexture)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>_shader-&gt;<ref refid="class_shader_program_1a285c27da064068522f4900a8e8075f68" kindref="member">use</ref>();</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Print<sp/>the<sp/>number<sp/>of<sp/>lights<sp/>in<sp/>the<sp/>scene<sp/>and<sp/>the<sp/>position<sp/>of<sp/>the<sp/>first<sp/>light.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//It<sp/>is<sp/>not<sp/>used,<sp/>but<sp/>this<sp/>demo<sp/>is<sp/>just<sp/>meant<sp/>to<sp/>show<sp/>you<sp/>THAT<sp/>materials<sp/>can<sp/>access<sp/>the<sp/>lights<sp/>in<sp/>a<sp/>world</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>(pWorld-&gt;getLightCount()<sp/>&gt;<sp/>0)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;TextureMaterial<sp/>has<sp/>discovered<sp/>light<sp/>is<sp/>at<sp/>position:&quot;<sp/>&lt;&lt;<sp/>pWorld-&gt;getLightAt(0)-&gt;getLocalPosition()<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//setup<sp/>texture<sp/>slot<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>glActiveTexture(GL_TEXTURE0);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//bind<sp/>the<sp/>texture<sp/>to<sp/>the<sp/>current<sp/>active<sp/>slot</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>glBindTexture(GL_TEXTURE_2D,<sp/>_diffuseTexture-&gt;<ref refid="class_texture_1ae5e31b308a56a6829b8f75b79bf1d359" kindref="member">getId</ref>());</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//tell<sp/>the<sp/>shader<sp/>the<sp/>texture<sp/>slot<sp/>for<sp/>the<sp/>diffuse<sp/>texture<sp/>is<sp/>slot<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>glUniform1i<sp/>(_uDiffuseTexture,<sp/>0);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//pass<sp/>in<sp/>a<sp/>precalculate<sp/>mvp<sp/>matrix<sp/>(see<sp/>texture<sp/>material<sp/>for<sp/>the<sp/>opposite)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>glm::mat4<sp/>mvpMatrix<sp/>=<sp/>pProjectionMatrix<sp/>*<sp/>pViewMatrix<sp/>*<sp/>pModelMatrix;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>glUniformMatrix4fv<sp/>(<sp/>_uMVPMatrix,<sp/>1,<sp/>GL_FALSE,<sp/>glm::value_ptr(mvpMatrix));</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//now<sp/>inform<sp/>mesh<sp/>of<sp/>where<sp/>to<sp/>stream<sp/>its<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>pMesh-&gt;<ref refid="class_mesh_1a1acf9ac81862610a3d8079e3bde3cf65" kindref="member">streamToOpenGL</ref>(_aVertex,<sp/>_aNormal,<sp/>_aUV);</highlight></codeline>
<codeline lineno="72"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="F:/Uni/2.2/3D Rendering/mge_v18_student_version(3)/mge_v18_student_version/src/mge/materials/TextureMaterial.cpp"/>
  </compounddef>
</doxygen>
